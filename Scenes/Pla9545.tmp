[gd_scene load_steps=6 format=3 uid="uid://c6umigpttu0tc"]

[ext_resource type="Texture2D" uid="uid://dvwuerayceb4i" path="res://Images/51473563858_e00396a563_b.jpg" id="2_ay0cf"]
[ext_resource type="Script" path="res://Scripts/Player/LR.gd" id="3_jyttq"]
[ext_resource type="Script" path="res://Scripts/Player/Cam.gd" id="4_qhq0l"]

[sub_resource type="GDScript" id="GDScript_4a40u"]
script/source = "extends CharacterBody2D

@export var LR = \"R\"
@export var Acceleration = 8
@export var MaxSpeed = 500.0
@export var JumpVel = 650.0
@export var SensorDir = \"D\"
@export var FallVel = 0
@export var Speed = 0
@export var Midair = 0
@export var Jump = 0

var gravity = ProjectSettings.get_setting(\"physics/2d/default_gravity\")

func _physics_process(delta):
	# Handle physics
	if not is_on_floor():
		Midair += 1
		if Midair >5:
			set_up_direction(Vector2.UP)
			velocity.y += (gravity * delta)
			if velocity.y > 19000 and not is_on_floor():
				velocity.y = 19000
		
	#Direction facing
	if Speed == 0:
		LR = LR
	elif Speed < 0:
		LR = \"L\"
	elif Speed > 0:
		LR = \"R\"
	# Code for changing speed around
	var Dir = Input.get_axis(\"left\", \"right\")
	if Dir:
		if not (Speed/(abs(Speed)*Dir)) == 1:
			Speed +=  Dir*Acceleration*2.5
		elif abs(Speed) < MaxSpeed:
			Speed += Dir*Acceleration
	else:
		if is_on_floor():
			if abs(Speed)> 4:
				Speed -= Acceleration/1.5 * ((int(LR == \"R\")*2)-1)
			else:
					Speed = 0
	
	if is_on_floor():
		#actually moves player
		if SensorDir == \"D\":
			velocity.x = Speed
		elif SensorDir == \"U\":
			velocity.x = -Speed
		elif SensorDir == \"R\":
			velocity.y = -Speed
		elif SensorDir == \"L\":
			velocity.y = Speed
		if Midair > 0:
			Midair -= 5
		else:
			Midair=0
	elif Midair >= 10:
		velocity.x= Speed
	#jumping
	if is_on_floor():
		if Input.is_action_just_pressed(\"jump\") and is_on_floor():
			velocity.x = Speed
			Jump = 1
			Midair = 10
			velocity.x += -JumpVel * sin(deg_to_rad(rotation_degrees+90))
			Speed= velocity.x
			velocity.y += -JumpVel * cos(rotation)
			rotation=0
			move_local_x(cos(rotation)*(abs(Speed/2)))
			move_local_y(sin(rotation)*(abs(Speed/2)))
	if Input.is_action_just_released(\"jump\") and velocity.y < -200:
		velocity.y = -200
	move_and_slide()
	
	#Wraps the angle 
	if is_on_floor():
		var normal: Vector2 = get_floor_normal()
		rotation_degrees =  wrapf(rad_to_deg(normal.angle())+90, 180, -180)

	#handles The surface direction, wallrunning, ceiling running all that good sonis stuff
	if rotation_degrees < 45 and rotation_degrees > -45:
		SensorDir = \"D\"
		set_up_direction(Vector2.UP)
	elif rotation_degrees < 135 and rotation_degrees > 45:
		SensorDir = \"L\"
		set_up_direction(Vector2.RIGHT)
	elif rotation_degrees < -45 and rotation_degrees > -135:
		SensorDir = \"R\"
		set_up_direction(Vector2.LEFT)
	else:
		SensorDir = \"U\"
		set_up_direction(Vector2.DOWN)
"

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_krp03"]
radius = 12.0
height = 42.0

[node name="Fenc 360" type="CharacterBody2D"]
position = Vector2(298, 89)
floor_constant_speed = true
floor_block_on_wall = false
floor_max_angle = 3.14159
floor_snap_length = 16.0
platform_floor_layers = 4278190082
platform_wall_layers = 2
script = SubResource("GDScript_4a40u")

[node name="PlaceHolder Fennec" type="Sprite2D" parent="."]
show_behind_parent = true
position = Vector2(-9.53674e-07, 7.45058e-06)
scale = Vector2(0.0351391, 0.0410156)
texture = ExtResource("2_ay0cf")
script = ExtResource("3_jyttq")

[node name="Cam" type="Camera2D" parent="."]
position = Vector2(1.33514e-05, -1.19209e-06)
position_smoothing_enabled = true
position_smoothing_speed = 1.0
script = ExtResource("4_qhq0l")

[node name="CollideBox" type="CollisionShape2D" parent="."]
shape = SubResource("CapsuleShape2D_krp03")
